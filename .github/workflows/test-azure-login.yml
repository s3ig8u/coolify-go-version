name: Test Azure Login

on:
  workflow_dispatch:

env:
  REGISTRY: shrtso.azurecr.io

jobs:
  test-login:
    runs-on: ubuntu-latest
    environment: PRD

    steps:
    - name: Check secret lengths
      run: |
        echo "AZURE_CLIENT_ID length: ${#AZURE_CLIENT_ID}"
        echo "AZURE_CLIENT_SECRET length: ${#AZURE_CLIENT_SECRET}"
        echo ""
        echo "Expected lengths:"
        echo "- Service Principal ID: 36 chars (GUID format)"
        echo "- Admin username: usually 5-10 chars (registry name)"
        echo "- Password: 40+ chars"
        echo ""
        if [ ${#AZURE_CLIENT_ID} -eq 6 ]; then
          echo "⚠️  AZURE_CLIENT_ID is very short (6 chars)"
          echo "This might be a truncated or incorrect value"
          echo "Azure Service Principal IDs are usually 36 characters"
        fi
      env:
        AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Test Docker login directly
      run: |
        echo "Testing direct Docker login to ${{ env.REGISTRY }}"
        echo "Using username: ${{ secrets.AZURE_CLIENT_ID }}"
        echo "Password length: ${#AZURE_CLIENT_SECRET}"
        echo ""
        
        # Try docker login
        if echo "${{ secrets.AZURE_CLIENT_SECRET }}" | docker login ${{ env.REGISTRY }} --username "${{ secrets.AZURE_CLIENT_ID }}" --password-stdin; then
          echo "✅ Docker login successful!"
          echo "The credentials are working correctly."
        else
          echo "❌ Docker login failed!"
          echo "This indicates the credentials are invalid or insufficient permissions."
        fi

    - name: Check registry accessibility
      run: |
        echo "Testing if registry is accessible..."
        if curl -s "https://${{ env.REGISTRY }}/v2/" > /dev/null; then
          echo "✅ Registry is accessible"
        else
          echo "❌ Registry is not accessible or doesn't exist"
        fi

    - name: Troubleshooting guide
      if: failure()
      run: |
        echo "## Troubleshooting Guide" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Possible Issues:" >> $GITHUB_STEP_SUMMARY
        echo "1. **Short AZURE_CLIENT_ID (6 chars)**: Service Principal IDs should be 36 chars" >> $GITHUB_STEP_SUMMARY
        echo "2. **Invalid credentials**: Username/password combination is incorrect" >> $GITHUB_STEP_SUMMARY
        echo "3. **Insufficient permissions**: Credentials don't have AcrPush role" >> $GITHUB_STEP_SUMMARY
        echo "4. **Registry access**: Registry might not exist or be accessible" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Solutions:" >> $GITHUB_STEP_SUMMARY
        echo "#### Option 1: Use Registry Admin User (Quick Fix)" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo 'az acr update --name shrtso --admin-enabled true' >> $GITHUB_STEP_SUMMARY
        echo 'az acr credential show --name shrtso' >> $GITHUB_STEP_SUMMARY
        echo '# Use username and password from output' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "#### Option 2: Create New Service Principal" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo 'az ad sp create-for-rbac --name "coolify-github" --role AcrPush --scopes "/subscriptions/{sub}/resourceGroups/{rg}/providers/Microsoft.ContainerRegistry/registries/shrtso"' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
